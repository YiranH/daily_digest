name: Update Feeds

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all feeds (ignore last scrape times)'
        required: false
        default: false
        type: boolean
  # Run on pushes to main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'feeds/**'
      - 'README.md'

jobs:
  update-feeds:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.7.1"
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      # Checkout gh-pages branch to get existing archive.json
      - name: Checkout gh-pages branch for archive
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch
        continue-on-error: true
      
      # Copy archive.json to feeds directory if it exists
      - name: Copy existing archive if available
        run: |
          mkdir -p feeds
          if [ -f "gh-pages-branch/archive.json" ]; then
            cp gh-pages-branch/archive.json feeds/
            echo "Found existing archive.json, copied to feeds directory"
          else
            echo "No existing archive.json found, will create a new one"
          fi
      
      - name: Run feed scraper
        run: |
          if [ "${{ github.event.inputs.force_refresh }}" == "true" ]; then
            echo "Running with force refresh..."
            poetry run python -m src.main --ai-only --force-refresh
          else
            echo "Running normal update..."
            poetry run python -m src.main --ai-only
          fi
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./feeds
          publish_branch: gh-pages
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Update feeds: ${{ github.event.head_commit.message }}' 